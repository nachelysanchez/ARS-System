// <auto-generated />
using System;
using ARS_System.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ARS_System.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("ARS_System.Entidades.Afiliados", b =>
                {
                    b.Property<int>("AfiliadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AseguradoraId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<int>("CiudadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<int>("NSS")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("OcupacionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SexoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.Property<float>("ValorReclamado")
                        .HasColumnType("REAL");

                    b.HasKey("AfiliadoId");

                    b.HasIndex("AseguradoraId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("OcupacionId");

                    b.HasIndex("SexoId");

                    b.ToTable("Afiliados");

                    b.HasData(
                        new
                        {
                            AfiliadoId = 1,
                            AseguradoraId = 1,
                            Cedula = "056-9150738-2",
                            Celular = "809-753-9963",
                            CiudadId = 1,
                            Direccion = "C/ Rivas, #5",
                            Email = "jperez@gmail.com",
                            FechaNacimiento = new DateTime(1995, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NSS = 256963,
                            Nombres = "Juan Perez",
                            OcupacionId = 1,
                            SexoId = 2,
                            Telefono = "809-999-8596",
                            ValorReclamado = 0f
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Aseguradoras", b =>
                {
                    b.Property<int>("AseguradoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CiudadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("AseguradoraId");

                    b.ToTable("Aseguradoras");

                    b.HasData(
                        new
                        {
                            AseguradoraId = 1,
                            CiudadId = 1,
                            Direccion = "Calle San Francisco",
                            Nombres = "Humano",
                            RNC = "101506254",
                            Telefono = "809-555-9632"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Ciudades", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CiudadId");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            CiudadId = 1,
                            Nombres = "San Francisco de Macoris",
                            ProvinciaId = 1
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Diagnosticos", b =>
                {
                    b.Property<int>("DiagnosticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("DiagnosticoId");

                    b.ToTable("Diagnosticos");

                    b.HasData(
                        new
                        {
                            DiagnosticoId = 1,
                            Nombres = "Anemia"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Doctores", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<int>("CiudadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Exequatur")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("DoctorId");

                    b.HasIndex("CiudadId");

                    b.ToTable("Doctores");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            Celular = "829-213-9632",
                            CiudadId = 1,
                            Direccion = "Calle 27 de Febrero",
                            Exequatur = "123-45",
                            Nombres = "Frank Felix Ventura",
                            Telefono = "809-555-6589"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.DoctoresDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("DoctoresDetalle");
                });

            modelBuilder.Entity("ARS_System.Entidades.Especialidades", b =>
                {
                    b.Property<int>("EspecialidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("EspecialidadId");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            EspecialidadId = 1,
                            Nombres = "Pediatría"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Ocupaciones", b =>
                {
                    b.Property<int>("OcupacionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("OcupacionesId");

                    b.ToTable("Ocupaciones");

                    b.HasData(
                        new
                        {
                            OcupacionesId = 1,
                            Nombre = "Plomero"
                        },
                        new
                        {
                            OcupacionesId = 2,
                            Nombre = "Electricista"
                        },
                        new
                        {
                            OcupacionesId = 3,
                            Nombre = "Abogado"
                        },
                        new
                        {
                            OcupacionesId = 4,
                            Nombre = "Ingeniero"
                        },
                        new
                        {
                            OcupacionesId = 5,
                            Nombre = "Chofer"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Permisos", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("PermisoId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ARS_System.Entidades.Prestadores", b =>
                {
                    b.Property<int>("PrestadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CiudadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("PrestadorId");

                    b.HasIndex("CiudadId");

                    b.ToTable("Prestadores");

                    b.HasData(
                        new
                        {
                            PrestadorId = 1,
                            CiudadId = 1,
                            Direccion = "C/ Salcedo Esq. San Francisco",
                            Nombres = "Centro Médico Nacional, San Francisco",
                            RNC = "A1053736146",
                            Telefono = "809-588-3414"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Provincias", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("ProvinciaId");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            ProvinciaId = 1,
                            Nombres = "Duarte"
                        },
                        new
                        {
                            ProvinciaId = 2,
                            Nombres = "María Trinidad Sánchez"
                        },
                        new
                        {
                            ProvinciaId = 3,
                            Nombres = "Sánchez Ramirez"
                        },
                        new
                        {
                            ProvinciaId = 4,
                            Nombres = "Hermanas Mirabal"
                        },
                        new
                        {
                            ProvinciaId = 5,
                            Nombres = "La Vega"
                        },
                        new
                        {
                            ProvinciaId = 6,
                            Nombres = "Samaná"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Nombre = "Administrador"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Servicios", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("ServicioId");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            ServicioId = 1,
                            Descripcion = "Consulta"
                        },
                        new
                        {
                            ServicioId = 2,
                            Descripcion = "Emergencia"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Sexos", b =>
                {
                    b.Property<int>("SexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("SexoId");

                    b.ToTable("Sexos");

                    b.HasData(
                        new
                        {
                            SexoId = 1,
                            Nombres = "Femenino"
                        },
                        new
                        {
                            SexoId = 2,
                            Nombres = "Masculino"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contrasena")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int>("RolId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Contrasena = "d7678f190ca1811f2d340c7aa1bf1822e6acaac89ffd8ea5c2f731efd3e10e4a",
                            Nombres = "Kelvin Peña",
                            RolId = 1,
                            Username = "KelvinP"
                        },
                        new
                        {
                            UsuarioId = 2,
                            Contrasena = "c25a957fe06e03fbbc5b8f9635c1addd4e1c62a2a7d6d1286faae96e603e9a15",
                            Nombres = "Nachely Sanchez",
                            RolId = 1,
                            Username = "NachelyS"
                        },
                        new
                        {
                            UsuarioId = 3,
                            Contrasena = "613ba1ddd8c16ecb4f619506e8d88e25c94b98d33b4c9a23d67910bcb0161a6d",
                            Nombres = "Vismar Lora",
                            RolId = 1,
                            Username = "VismarL"
                        });
                });

            modelBuilder.Entity("ARS_System.Entidades.UsuariosDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("PermisoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermisoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosDetalle");
                });

            modelBuilder.Entity("ARS_System.Entidades.Afiliados", b =>
                {
                    b.HasOne("ARS_System.Entidades.Aseguradoras", "Aseguradora")
                        .WithMany()
                        .HasForeignKey("AseguradoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARS_System.Entidades.Ciudades", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARS_System.Entidades.Ocupaciones", "Ocupacion")
                        .WithMany()
                        .HasForeignKey("OcupacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARS_System.Entidades.Sexos", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aseguradora");

                    b.Navigation("Ciudad");

                    b.Navigation("Ocupacion");

                    b.Navigation("Sexo");
                });

            modelBuilder.Entity("ARS_System.Entidades.Ciudades", b =>
                {
                    b.HasOne("ARS_System.Entidades.Provincias", "Provincias")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("ARS_System.Entidades.Doctores", b =>
                {
                    b.HasOne("ARS_System.Entidades.Ciudades", "Ciudades")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("ARS_System.Entidades.DoctoresDetalle", b =>
                {
                    b.HasOne("ARS_System.Entidades.Doctores", null)
                        .WithMany("Detalle")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARS_System.Entidades.Especialidades", "Especialidades")
                        .WithMany()
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidades");
                });

            modelBuilder.Entity("ARS_System.Entidades.Prestadores", b =>
                {
                    b.HasOne("ARS_System.Entidades.Ciudades", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("ARS_System.Entidades.Usuarios", b =>
                {
                    b.HasOne("ARS_System.Entidades.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ARS_System.Entidades.UsuariosDetalle", b =>
                {
                    b.HasOne("ARS_System.Entidades.Permisos", "Permisos")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARS_System.Entidades.Usuarios", null)
                        .WithMany("DetalleUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("ARS_System.Entidades.Doctores", b =>
                {
                    b.Navigation("Detalle");
                });

            modelBuilder.Entity("ARS_System.Entidades.Usuarios", b =>
                {
                    b.Navigation("DetalleUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
